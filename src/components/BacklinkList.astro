---
import { IssueData } from '@/types/github';
import { Backlink } from '@/types/zettelkasten';
import { collectBacklinks } from '@/lib/zettelkasten';
import { BASE_PATH } from '@/config';

export interface Props {
  currentIssue: IssueData;
  allIssues: IssueData[];
  showEmptyMessage?: boolean;
}

const { 
  currentIssue, 
  allIssues,
  showEmptyMessage = true
} = Astro.props;

// バックリンクの収集
const backlinks = collectBacklinks(currentIssue, allIssues, BASE_PATH);
---

<div class="backlinks-container">
  <h3 class="backlinks-title">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon" width="18" height="18">
      <path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path>
      <line x1="8" y1="12" x2="16" y2="12"></line>
    </svg>
    バックリンク ({backlinks.length})
  </h3>

  {backlinks.length > 0 ? (
    <ul class="backlinks-list">
      {backlinks.map((backlink: Backlink) => (
        <li class={`backlink-item ${backlink.isBidirectional ? 'bidirectional' : ''}`}>
          <a href={`${BASE_PATH}/wiki/${backlink.slug}`} class="backlink-title">
            {backlink.title}
            {backlink.isBidirectional && (
              <span class="bidirectional-indicator" title="双方向リンク">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" width="14" height="14">
                  <path d="M7 17l9.2-9.2M17 17V7H7"></path>
                </svg>
              </span>
            )}
          </a>
          {backlink.context && (
            <p class="backlink-context">{backlink.context}</p>
          )}
        </li>
      ))}
    </ul>
  ) : (
    showEmptyMessage && (
      <p class="empty-message">このページへのリンクがあるページはまだありません。</p>
    )
  )}
</div>

<style>
  .backlinks-container {
    margin-top: 1rem;
  }
  
  .backlinks-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.1rem;
    margin-bottom: 1rem;
    color: var(--color-text);
  }
  
  .backlinks-title .icon {
    color: var(--color-text-light);
  }
  
  .backlinks-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .backlink-item {
    padding: 0.75rem;
    border-left: 3px solid var(--color-border);
    margin-bottom: 0.75rem;
    border-radius: 0 4px 4px 0;
    background-color: var(--color-bg);
    transition: all var(--transition-speed);
  }
  
  .backlink-item:hover {
    border-left-color: var(--color-primary);
    background-color: var(--color-card-bg);
  }
  
  .backlink-item.bidirectional {
    border-left-color: var(--color-primary);
  }
  
  .backlink-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-link);
    text-decoration: none;
    font-weight: 500;
  }
  
  .backlink-title:hover {
    text-decoration: underline;
  }
  
  .bidirectional-indicator {
    display: inline-flex;
    color: var(--color-primary);
  }
  
  .backlink-context {
    font-size: 0.85rem;
    color: var(--color-text-light);
    margin-top: 0.25rem;
    margin-bottom: 0;
  }
  
  .empty-message {
    font-size: 0.9rem;
    color: var(--color-text-light);
    font-style: italic;
    padding: 0.75rem;
    background-color: var(--color-bg);
    border-radius: 4px;
  }
</style>
