---
import { IssueData } from '@/types/github';
import { ZettelkastenConfig } from '@/types/zettelkasten';
import { markdownToHtmlWithZettelkasten } from '@/lib/markdown';
import { format } from 'date-fns';
import { DEFAULT_ZETTELKASTEN_CONFIG, BASE_PATH, REPO_URL } from '@/config';

export interface Props {
  issue: IssueData;
  allIssues: IssueData[];
  showLabels?: boolean;
  showTimestamp?: boolean;
  showEditLink?: boolean;
  zettelkastenConfig?: ZettelkastenConfig;
}

const { 
  issue, 
  allIssues,
  showLabels = true,
  showTimestamp = true,
  showEditLink = true,
  zettelkastenConfig = DEFAULT_ZETTELKASTEN_CONFIG
} = Astro.props;

// マークダウンをHTMLに変換（Zettelkastenモード対応）
const contentHtml = markdownToHtmlWithZettelkasten(
  issue.body, 
  allIssues, 
  zettelkastenConfig,
  BASE_PATH,
  issue.number
);

// 日付フォーマット
const createdDate = new Date(issue.created_at);
const updatedDate = new Date(issue.updated_at);
const formattedCreatedDate = format(createdDate, 'yyyy年MM月dd日');
const formattedUpdatedDate = format(updatedDate, 'yyyy年MM月dd日');
const isUpdated = formattedCreatedDate !== formattedUpdatedDate;
---

<article class="wiki-article">
  <header class="wiki-header">
    <h1 class="wiki-title">{issue.title}</h1>
    
    {showLabels && issue.labels && issue.labels.length > 0 && (
      <div class="labels">
        {issue.labels.map(label => (
          <span 
            class="label" 
            style={`background-color: #${label.color || 'ededed'}`}
            title={label.description || ''}
          >
            {label.name}
          </span>
        ))}
      </div>
    )}
    
    {showTimestamp && (
      <div class="wiki-meta">
        <time datetime={issue.created_at} title="作成日">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon" width="14" height="14">
            <circle cx="12" cy="12" r="10"></circle>
            <polyline points="12 6 12 12 16 14"></polyline>
          </svg>
          {formattedCreatedDate}に作成
        </time>
        
        {isUpdated && (
          <time datetime={issue.updated_at} title="更新日">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon" width="14" height="14">
              <path d="M23 4v6h-6"></path>
              <path d="M20.49 15a9 9 0 1 1-2.12-9.36L23 10"></path>
            </svg>
            {formattedUpdatedDate}に更新
          </time>
        )}
        
        {issue.user && (
          <span class="author" title={`作成者: ${issue.user.login}`}>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon" width="14" height="14">
              <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
              <circle cx="12" cy="7" r="4"></circle>
            </svg>
            <a href={issue.user.html_url} target="_blank" rel="noopener noreferrer">
              {issue.user.login}
            </a>
          </span>
        )}
      </div>
    )}
  </header>

  <div class="wiki-content" set:html={contentHtml}></div>
  
  {showEditLink && (
    <footer class="wiki-footer">
      <div class="edit-links">
        <a href={issue.html_url} target="_blank" rel="noopener noreferrer" class="edit-link">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon" width="16" height="16">
            <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
            <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
          </svg>
          GitHubでこのページを編集する
        </a>
        <a href={`${REPO_URL}/issues/new`} target="_blank" rel="noopener noreferrer" class="edit-link">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon" width="16" height="16">
            <line x1="12" y1="5" x2="12" y2="19"></line>
            <line x1="5" y1="12" x2="19" y2="12"></line>
          </svg>
          新しいページを作成する
        </a>
      </div>
    </footer>
  )}
</article>

<style>
  .wiki-article {
    margin-bottom: 2rem;
  }
  
  .wiki-header {
    margin-bottom: 2rem;
  }
  
  .wiki-title {
    font-size: 2rem;
    line-height: 1.2;
    color: var(--color-text);
    margin-top: 0;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--color-border);
  }
  
  .labels {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }
  
  .label {
    font-size: 0.75rem;
    padding: 0.2rem 0.5rem;
    border-radius: 20px;
    color: #333;
    white-space: nowrap;
  }
  
  .wiki-meta {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1rem;
    font-size: 0.875rem;
    color: var(--color-text-light);
    margin-bottom: 1rem;
  }
  
  .wiki-meta time,
  .wiki-meta .author {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
  }
  
  .wiki-meta .icon {
    color: var(--color-text-light);
  }
  
  .wiki-meta a {
    color: var(--color-link);
    text-decoration: none;
  }
  
  .wiki-meta a:hover {
    text-decoration: underline;
  }
  
  .wiki-content {
    font-size: 1rem;
    line-height: 1.7;
  }
  
  .wiki-footer {
    margin-top: 3rem;
    padding-top: 1rem;
    border-top: 1px solid var(--color-border);
  }
  
  .edit-links {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }
  
  .edit-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-link);
    text-decoration: none;
    font-size: 0.9rem;
    padding: 0.5rem 0;
  }
  
  .edit-link:hover {
    text-decoration: underline;
  }
  
  /* レスポンシブ対応 */
  @media (max-width: 768px) {
    .wiki-title {
      font-size: 1.75rem;
    }
    
    .wiki-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>
